name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Build static site
      run: |
        mkdir -p _site
        # Create a simple HTML page that loads the normalizer
        cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Hassaniya Arabic Normalizer</title>
            <style>
                body {
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    background-color: #f5f5f5;
                }
                .container {
                    background: white;
                    padding: 30px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                }
                h1 {
                    color: #2c3e50;
                    text-align: center;
                    margin-bottom: 30px;
                }
                .form-group {
                    margin-bottom: 20px;
                }
                label {
                    display: block;
                    margin-bottom: 5px;
                    font-weight: bold;
                    color: #34495e;
                }
                textarea {
                    width: 100%;
                    min-height: 120px;
                    padding: 12px;
                    border: 2px solid #ddd;
                    border-radius: 5px;
                    font-size: 16px;
                    font-family: 'Arial', sans-serif;
                    resize: vertical;
                    box-sizing: border-box;
                }
                textarea:focus {
                    outline: none;
                    border-color: #3498db;
                }
                button {
                    background-color: #3498db;
                    color: white;
                    padding: 12px 30px;
                    border: none;
                    border-radius: 5px;
                    font-size: 16px;
                    cursor: pointer;
                    transition: background-color 0.3s;
                }
                button:hover {
                    background-color: #2980b9;
                }
                button:disabled {
                    background-color: #bdc3c7;
                    cursor: not-allowed;
                }
                .result {
                    margin-top: 20px;
                    padding: 15px;
                    background-color: #ecf0f1;
                    border-radius: 5px;
                    border-left: 4px solid #3498db;
                }
                .error {
                    background-color: #fadbd8;
                    border-left-color: #e74c3c;
                    color: #c0392b;
                }
                .loading {
                    text-align: center;
                    color: #7f8c8d;
                }
                .github-link {
                    text-align: center;
                    margin-top: 30px;
                }
                .github-link a {
                    color: #3498db;
                    text-decoration: none;
                }
                .github-link a:hover {
                    text-decoration: underline;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>ðŸ‡²ðŸ‡· Hassaniya Arabic Normalizer</h1>
                
                <div class="form-group">
                    <label for="input-text">Enter Hassaniya Arabic text to normalize:</label>
                    <textarea id="input-text" placeholder="Ø£Ø¯Ø®Ù„ Ø§Ù„Ù†Øµ Ø§Ù„Ø­Ø³Ø§Ù†ÙŠ Ù‡Ù†Ø§...
Example: Ù‚Ø§Ù„ Ø§Ù„Ø±Ø¬Ù„"></textarea>
                </div>
                
                <button onclick="normalizeTextInput()" id="normalize-btn">Normalize Text</button>
                
                <div id="result" style="display: none;"></div>
                
                <div class="github-link">
                    <p><a href="https://github.com/yourusername/hassaniya-normalizer" target="_blank">View on GitHub</a></p>
                    <p><em>Note: This is a client-side demo. For full functionality, please use the Python package or Docker container.</em></p>
                </div>
            </div>

            <script>
                // Hassaniya normalization with proper Ø§Ù„Ù‚Ø¶ÙŠØ© exception handling
                // Ø§Ù„Ù‚Ø¶ÙŠØ© should become Ø§Ù„Ù‚Ø¶ÙŠÙ‡ (Ù‚ preserved, Ø©â†’Ù‡ applied)
                
                function normalizeText(text) {
                    let result = text;
                    
                    // Step 1: Apply Ú¯/Ù‚ â†’ Ùƒ rules (with exceptions)
                    const qafExceptions = ['Ø§Ù„Ù‚Ø¶ÙŠØ©', 'Ø§Ù„Ù‚Ø¶ÙŠÙ‡']; // Words where Ù‚ should be preserved
                    let hasQafException = qafExceptions.some(exc => result.includes(exc));
                    
                    if (!hasQafException) {
                        result = result.replace(/[Ú¯Ù‚]/g, 'Ùƒ');
                    } else {
                        // Apply Ù‚â†’Ùƒ only to parts not in exceptions
                        result = result.replace(/[Ú¯Ù‚]/g, (match, offset, string) => {
                            // Check if this Ù‚/Ú¯ is part of an exception word
                            for (const exc of qafExceptions) {
                                const excIndex = string.indexOf(exc);
                                if (excIndex !== -1 && offset >= excIndex && offset < excIndex + exc.length) {
                                    return match; // Preserve in exception
                                }
                            }
                            return 'Ùƒ'; // Replace elsewhere
                        });
                    }
                    
                    // Step 2: Apply Ø© â†’ Ù‡ (always, no exceptions for this rule)
                    result = result.replace(/Ø©/g, 'Ù‡');
                    
                    // Step 3: Basic Arabic normalization
                    result = result.replace(/[Ø£Ø¥Ø¢]/g, 'Ø§');
                    result = result.replace(/Ù‰/g, 'ÙŠ');
                    
                    return result.replace(/\s+/g, ' ').trim();
                }

                function normalizeTextInput() {
                     const inputText = document.getElementById('input-text').value.trim();
                     const button = document.querySelector('button');
                     
                     if (!inputText) {
                         showResult('Please enter some text to normalize.', 'error');
                         return;
                     }
                     
                     button.disabled = true;
                     button.textContent = 'Normalizing...';
                     
                     // Simulate processing delay for better UX
                     setTimeout(() => {
                         try {
                             const normalizedText = normalizeText(inputText);
                            
                            showResult(`<strong>Original:</strong><br>${inputText}<br><br><strong>Normalized:</strong><br>${normalizedText}`);
                        } catch (error) {
                            showResult('An error occurred during normalization.', 'error');
                        }
                        
                        button.disabled = false;
                        button.textContent = 'Normalize Text';
                    }, 500);
                }
                
                function showResult(content, type = '') {
                    const resultDiv = document.getElementById('result');
                    resultDiv.innerHTML = content;
                    resultDiv.className = 'result ' + type;
                    resultDiv.style.display = 'block';
                }
                
                // Allow Enter key to trigger normalization
                document.getElementById('input-text').addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && e.ctrlKey) {
                        normalizeText();
                    }
                });
            </script>
        </body>
        </html>
        EOF
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4